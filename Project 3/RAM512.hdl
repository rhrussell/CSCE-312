//Name: Ryan Russell
//UIN: 227006614

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */
 
// CREATE THE RAM 512 using RAM64 Modules

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
        DMux8Way(in=load,sel=address[6..8],a=in64reg0,b=in64reg1,c=in64reg2,d=in64reg3,e=in64reg4,f=in64reg5,g=in64reg6,h=in64reg7);
        RAM64(in=in,load=in64reg0,address=address[0..5],out=out64reg0);
        RAM64(in=in,load=in64reg1,address=address[0..5],out=out64reg1);
        RAM64(in=in,load=in64reg2,address=address[0..5],out=out64reg2);
        RAM64(in=in,load=in64reg3,address=address[0..5],out=out64reg3);
        RAM64(in=in,load=in64reg4,address=address[0..5],out=out64reg4);
        RAM64(in=in,load=in64reg5,address=address[0..5],out=out64reg5);
        RAM64(in=in,load=in64reg6,address=address[0..5],out=out64reg6);
        RAM64(in=in,load=in64reg7,address=address[0..5],out=out64reg7);
        Mux8Way16(a=out64reg0,b=out64reg1,c=out64reg2,d=out64reg3,e=out64reg4,f=out64reg5,g=out64reg6,h=out64reg7,sel=address[6..8],out=out);
}